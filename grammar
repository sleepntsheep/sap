program        -> expression * EOF;

expression     -> declaration
                    | block
                    | if
                    | while
                    | function
                    | "print" expression;

if             -> "if" expression expression
                    ("else" expression) ? 

while          -> "while" expression expression

block          -> "{" expression * "}" ;

function       -> "subroutine" IDENTIFIER "(" IDENTIFIER* ")" expression

declaration    -> "let" IDENTIFIER ":=" expression |
                        assignment
                    
assignment     -> IDENTIFIER ":=" assignment 
                    | logic_or;

logic_or       -> logic_and ( "or" logic_and )* ;

logic_and      -> equality ( "and" equality )* ;

equality       -> comparison ( ( "~" | "=" | " ) comparison )* ;

comparison     -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;

term           -> factor ( ( "-" | "+" | ".." ) factor )* ;

factor         -> exponent ( ( "/" | "*" ) exponent )* ;

exponent       -> unary  ( "**" exponent )* ;

unary          -> ( "!" | "-" ) unary
                   | call ;

call           -> primary ( "(" arguments? ")" )*;

arguments      -> expression ("," expression )* ;

primary        -> NUMBER | STRING | IDENTIFIER | "true" | "false" | "nil"
                   | "(" expression ")" ;


